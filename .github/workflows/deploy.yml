name: Deploy to Vercel

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ---- 1. 拉取代码 + 私有子模块 ----
      - name: Checkout Main Repo + Submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'  # 递归拉取子模块
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}  # 使用SSH密钥访问私有子模块

      # ---- 2. 配置SSH密钥 ----
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          # 修复密钥格式（处理换行符）
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/id_ed25519
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_ed25519
          # 添加GitHub到已知主机
          ssh-keyscan -t ed25519 github.com >> ~/.ssh/known_hosts

      # ---- 3. 设置Node.js环境 ----
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'  # 启用npm缓存加速

      # ---- 4. 安装依赖 ----
      - name: Install Dependencies
        run: |
          npm install -g hexo-cli  # 全局安装hexo-cli
          npm ci --omit=dev  # 安装生产依赖，提升速度

      # ---- 5. 清理并生成静态文件 ----
      - name: Build Hexo
        run: |
          hexo clean
          hexo generate
          # 确保生成至少一个文件
          [ -f ./public/index.html ] || (echo "Error: No files generated!" && exit 1)

      # ---- 6. 验证构建产物 ----
      - name: Validate Public Directory
        run: |
          echo "Generated files:"
          ls -lh ./public
          [ -f ./public/index.html ] || exit 1

      # ---- 7. 部署到Vercel（官方稳定方案） ----
      - name: Deploy to Vercel
        uses: vercel/actions@v1  # 使用官方维护的Action
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          directory: ./public  # 指定Hexo生成的静态目录
          force: true  # 强制覆盖旧部署
